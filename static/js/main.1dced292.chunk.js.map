{"version":3,"sources":["components/MovePreview/MovePreview.js","components/MoveList/MoveList.js","pages/HomePage/HomePage.js","components/ContactPreview/ContactPreview.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","pages/ContactPage/ContactPage.js","components/Input/Input.js","components/TransferFund/TransferFund.js","pages/ContactDetailsPage/ContactDetailsPage.js","services/UtilService.js","services/ContactService.js","pages/ContactEditPage/ContactEditPage.js","components/Chart/Chart.js","services/BitcoinService.js","pages/Statistics/Statistics.js","pages/SignupPage/SignupPage.js","components/NavBar/NavBar.js","App.js","serviceWorker.js","services/StorageService.js","services/UserService.js","store/UserStore.js","store/ContactStore.js","store/BitcoinStore.js","index.js","store/RootStore.js"],"names":["MoveList","props","react_default","a","createElement","className","move","to","moment","at","fromNow","amount","title","moves","map","MovePreview_MovePreview","key","_id","HomePage","inject","observer","this","store","userStore","loadUser","coins","coinsCount","bitcoinStore","loadRate","_this$props$store$use","user","lastMoves","rate","name","components_MoveList_MoveList","React","Component","observable","ContactPreview","Link","concat","contact","alt","src","ContactList","contacts","components_ContactPreview_ContactPreview","ContactFilter","type","placeholder","onChange","onFilter","ContactPage","contactStore","loadContacts","ev","filterBy","target","value","components_ContactFilter_ContactFilter","filterContacts","bind","components_ContactList_ContactList","Input","onChangeInput","TransferFund","updateAmount","_this","onTransferCoins","preventDefault","_this2","onSubmit","components_Input_Input","ContactDetailsPage","addMove","currContact","setContactById","match","params","id","contactMoves","phone","email","components_TransferFund_TransferFund","maxCoins","UtilService","makeId","length","arguments","undefined","txt","possible","i","charAt","Math","floor","random","ContactService","getContacts","Promise","resolve","reject","contactsToReturn","term","filter","toLocaleLowerCase","includes","sort","b","getContactById","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","push","_addContact","getEmptyContact","ContactEditPage","inputs","Object","keys","renderInput","item","changeValue","assertThisInitialized","history","onClick","Chart","description","build","data","color","BitcoinService","getRate","axios","get","then","res","getMarketPrice","monthCount","getConfirmedTransactions","Statistics","state","marketPrice","trans","statsPrms","all","values","y","setState","components_Chart_Chart","SignupPage","signUp","username","saveUser","changeUsername","NavBar","NavLink","exact","PrivateRoute","Route","Redirect","App","HashRouter","components_NavBar_NavBar","Switch","App_PrivateRoute","path","component","Boolean","window","location","hostname","StorageService","any","localStorage","JSON","stringify","load","str","parse","UserService","signup","unshift","Date","now","_reduceCoins","UserStore","rootStore","classCallCheck","initializerDefineProperty","UserStore_descriptor","slice","computed","action","ContactStore","ContactStore_descriptor","_descriptor2","BitcoinStore","BitcoinStore_descriptor","RootStore","ReactDOM","render","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1dced292.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovePreview.scss';\r\nimport moment from 'moment'\r\n\r\nconst MoveList = (props) => {\r\n    return (\r\n        <div className=\"move-preview\">\r\n            {props.move.to && <p>To: {props.move.to}</p>}\r\n            <p>At: {moment(props.move.at).fromNow()}</p>\r\n            <p>Amount: {props.move.amount}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoveList;","import React from 'react';\r\nimport MovePreview from '../MovePreview/MovePreview';\r\nimport './MoveList.scss';\r\n\r\nconst MoveList = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n            {props.moves.map(move => {\r\n                return <MovePreview key={move._id} move={move}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoveList;","import React from 'react';\r\nimport './HomePage.scss';\r\nimport MoveList from '../../components/MoveList/MoveList';\r\nimport { observable } from 'mobx'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends React.Component {\r\n\r\n    @observable\r\n\r\n    async componentDidMount() {\r\n        await this.props.store.userStore.loadUser()\r\n        const coins = this.props.store.userStore.coinsCount\r\n        this.props.store.bitcoinStore.loadRate(coins)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { user, lastMoves } = this.props.store.userStore\r\n        const { rate } = this.props.store.bitcoinStore\r\n\r\n        return user && (\r\n            <div className=\"home-page\">\r\n                <h1>Hello {user.name}</h1>\r\n                <div>Coins: {user.coins}</div>\r\n                <div>BTC: {rate}</div>\r\n                <MoveList title=\"Last Moves:\" moves={lastMoves}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ContactPreview.scss';\r\n\r\nconst ContactPreview = (props) => {\r\n    return (\r\n        <Link to={`/contact/${props.contact._id}`}>\r\n            <li className=\"contact-preview\">\r\n                <img alt=\"Contact\" src={`https://robohash.org/${props.contact._id}`} />\r\n                <span>{props.contact.name}</span>\r\n            </li>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ContactPreview;","import React from 'react';\r\nimport './ContactList.scss';\r\nimport ContactPreview from '../ContactPreview/ContactPreview';\r\n\r\nconst ContactList = (props) => {\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {props.contacts.map(contact => {\r\n                return <ContactPreview key={contact._id} \r\n                contact={contact}/>\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport './ContactFilter.scss';\r\n\r\nconst ContactFilter = (props) => {\r\n    return (\r\n        <div className=\"filter\">\r\n            <input type=\"text\" placeholder=\"Search\" onChange={props.onFilter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactFilter;","import React from 'react';\r\nimport './ContactPage.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport ContactFilter from '../../components/ContactFilter/ContactFilter';\r\nimport { observable } from 'mobx'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactPage extends React.Component {\r\n\r\n    @observable filterBy = null\r\n\r\n    async componentDidMount() {\r\n        this.props.store.contactStore.loadContacts()\r\n    }\r\n\r\n    async filterContacts(ev) {\r\n        this.filterBy = ev.target.value\r\n        await this.props.store.contactStore.loadContacts(this.filterBy)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {contacts} = this.props.store.contactStore\r\n\r\n        return (\r\n            <div className=\"contact-page\">\r\n                <Link className=\"add-btn\" to=\"/contact/edit/\">+</Link>\r\n                <h1>Contacts</h1>\r\n                <ContactFilter onFilter={this.filterContacts.bind(this)}/>\r\n                <ContactList contacts={contacts}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport './Input.scss';\r\n\r\nconst Input = (props) => {\r\n\r\n    const onChange = (ev) => props.onChangeInput(props.name, ev.target.value)\r\n    return (\r\n        <input type={props.type || 'text'} name={props.name} value={props.value} onChange={onChange}/>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from '../Input/Input';\r\nimport './TransferFund.scss';\r\nimport { observable } from 'mobx'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass TransferFund extends React.Component {\r\n\r\n    @observable amount = 0\r\n    \r\n    updateAmount = (name, value) => {\r\n        this.amount = value\r\n    }\r\n\r\n    onTransferCoins = (ev, amount) => {\r\n        ev.preventDefault()\r\n        if (amount <= this.props.store.userStore.coinsCount) {\r\n            this.props.onTransferCoins(ev, amount)\r\n            this.amount = 0\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Transfer coins to {this.props.contact.name}</p>\r\n                <form onSubmit={(ev) => this.onTransferCoins(ev, this.amount)}>\r\n                    Amount:\r\n                    <Input name=\"amount\" value={this.amount} onChangeInput={this.updateAmount}/>\r\n                    <button>Transfer</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransferFund;","import React from 'react';\r\nimport './ContactDetailsPage.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport TransferFund from '../../components/TransferFund/TransferFund';\r\nimport MoveList from '../../components/MoveList/MoveList';\r\nimport { observer, inject } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactDetailsPage extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        await this.props.store.contactStore.setContactById(this.props.match.params.id)\r\n    }\r\n\r\n    onTransferCoins = (ev, amount) => {\r\n        this.props.store.userStore.addMove(amount, this.props.store.contactStore.currContact)\r\n    }\r\n\r\n    render() {\r\n        const { currContact } = this.props.store.contactStore\r\n        const { user, contactMoves } = this.props.store.userStore\r\n\r\n        return currContact._id ?\r\n            (<div className=\"details-page\">\r\n                <div>\r\n                    <img alt=\"Contact\" src={`https://robohash.org/${currContact._id}`} />\r\n                    <div>Name: {currContact.name}</div>\r\n                    <div>Phone: {currContact.phone}</div>\r\n                    <div>Email: {currContact.email}</div>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    <Link to=\"/\">Back</Link>\r\n                    <Link to={`/contact/edit/${currContact._id}`}>Edit</Link>\r\n                </div>\r\n                <TransferFund contact={currContact} \r\n                maxCoins={user.coins}\r\n                onTransferCoins={this.onTransferCoins} />\r\n                <MoveList title=\"Your Moves:\" moves={contactMoves}/>\r\n            </div>)\r\n        : <div>Loading</div>\r\n    }\r\n}\r\n\r\nexport default ContactDetailsPage;","function makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n\r\nexport default {\r\n    makeId\r\n}","import UtilService from './UtilService'\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy) {\n      const {term} = filterBy;\n      contactsToReturn = contacts.filter( contact => {\n        return contact.name.toLocaleLowerCase().includes(term) ||\n               contact.phone.toLocaleLowerCase().includes(term) ||\n               contact.email.toLocaleLowerCase().includes(term)\n      })\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = UtilService.makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return new Promise((resolve, reject) => { \n    const c = contacts.filter( contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n             contact.phone.toLocaleLowerCase().includes(term) ||\n             contact.email.toLocaleLowerCase().includes(term)\n    })\n\n    resolve(c)\n  })\n}\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  filter,\n  saveContact,\n  getEmptyContact\n}","import React from 'react';\r\nimport './ContactEditPage.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport ContactService from '../../services/ContactService';\r\nimport Input from '../../components/Input/Input';\r\nimport { observable } from 'mobx'\r\nimport { observer, inject } from 'mobx-react'\r\nimport UtilService from '../../services/UtilService';\r\n\r\nconst contact = ContactService.getEmptyContact()\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactEditPage extends React.Component {\r\n\r\n    @observable contact = contact\r\n    inputs = Object.keys(contact)\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (!id) return\r\n\r\n        await this.props.store.contactStore.setContactById(id)\r\n        this.contact = this.props.store.contactStore.currContact\r\n    }\r\n    \r\n    changeValue(name, value) {\r\n        this.contact[name] = value\r\n    }\r\n\r\n    saveContact() {\r\n        this.props.store.contactStore.saveContact(this.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    deleteContact() {\r\n        this.props.store.contactStore.deleteContact(this.contact._id)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    renderInput = (item) => {\r\n        return (\r\n            <div key={item}>\r\n                {item}\r\n                <Input name={item} \r\n                value={this.contact[item]} \r\n                onChangeInput={this.changeValue.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-page\">\r\n                <img alt=\"Contact\" src={`https://robohash.org/${this.contact._id || UtilService.makeId()}`} />\r\n                <div>\r\n                    {this.inputs.map(item => {\r\n                        return this.renderInput(item)\r\n                    })}                   \r\n                </div>\r\n                <button onClick={this.saveContact.bind(this)}>Save</button>\r\n                <div className=\"nav-btns\">\r\n                    <Link to={`/contact/${this.contact._id || ''}`}>Back</Link>\r\n                    {this.contact._id && <button onClick={this.deleteContact.bind(this)}>Delete Contact</button>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactEditPage;","import React from 'react';\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nconst Chart = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.description}</h3>\r\n            <Sparklines data={props.data}>\r\n                <SparklinesLine color={props.color} />\r\n            </Sparklines>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nfunction getRate(coins) {\r\n    return axios.get(`https://blockchain.info/tobtc?currency=USD&value=${coins}`)\r\n        .then(res => res.data);\r\n}\r\n\r\nfunction getMarketPrice(monthCount) {\r\n    return axios.get(`https://api.blockchain.info/charts/market-price?timespan=${monthCount}months&format=json&cors=true`)\r\n        .then(res => res.data);\r\n}\r\n\r\nfunction getConfirmedTransactions(monthCount) {\r\n    return axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=${monthCount}months&format=json&cors=true`)\r\n        .then(res => res.data);\r\n}","import React from 'react';\r\nimport './Statistics.scss';\r\nimport Chart from '../../components/Chart/Chart';\r\nimport BitcoinService from '../../services/BitcoinService';\r\n\r\nclass Statistics extends React.Component {\r\n    state = {\r\n        marketPrice: null,\r\n        trans: null\r\n    }\r\n\r\n    async componentWillMount() {\r\n        const statsPrms = [await BitcoinService.getMarketPrice(3), await BitcoinService.getConfirmedTransactions(3)]\r\n        await Promise.all(statsPrms)\r\n        const marketPrice = statsPrms[0]\r\n        const trans = statsPrms[1]\r\n        marketPrice.values = marketPrice.values.map(value => value.y)\r\n        trans.values = trans.values.map(value => value.y)\r\n        this.setState({marketPrice, trans}) \r\n    }\r\n\r\n    render() {   \r\n        return ( this.state.marketPrice &&\r\n            <div className=\"statistics\">\r\n                <h1>Statistics</h1>\r\n                <Chart title={this.state.marketPrice.name} \r\n                description={this.state.marketPrice.description}\r\n                data={this.state.marketPrice.values}\r\n                color=\"blue\"/>\r\n                <Chart title={this.state.trans.name} \r\n                description={this.state.trans.description}\r\n                data={this.state.trans.values}\r\n                color=\"red\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport './SignupPage.scss';\r\nimport Input from '../../components/Input/Input';\r\nimport { observable } from 'mobx'\r\nimport { observer, inject } from 'mobx-react'\r\n\r\n@inject('store')\r\n@observer\r\nclass SignupPage extends React.Component {\r\n\r\n    @observable username = ''\r\n\r\n    saveUser(ev) {\r\n        ev.preventDefault()\r\n        this.props.store.userStore.signUp(this.username)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    changeUsername(key, value) {\r\n        this.username = value\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signup-page\">\r\n                <h2>Please enter your name:</h2>\r\n                <form onSubmit={this.saveUser.bind(this)}>\r\n                    <Input name=\"username\" onChangeInput={this.changeUsername.bind(this)}/>\r\n                    <button>Sign Up</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupPage;","import React from 'react';\r\nimport './NavBar.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <nav className=\"nav-container\">\r\n            <ul>\r\n                <li>\r\n                    <NavLink exact to=\"/\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/contact\">Contacts</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/stats\">Statistics</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\nimport './App.scss';\nimport HomePage from './pages/HomePage/HomePage'\nimport ContactPage from './pages/ContactPage/ContactPage'\nimport ContactDetailsPage from './pages/ContactDetailsPage/ContactDetailsPage'\nimport ContactEditPage from './pages/ContactEditPage/ContactEditPage'\nimport Statistics from './pages/Statistics/Statistics'\nimport SignupPage from './pages/SignupPage/SignupPage'\nimport NavBar from './components/NavBar/NavBar'\nimport { observer, inject } from 'mobx-react'\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\n\nconst PrivateRoute = (props) => {\n  return props.user ? <Route {...props} /> : <Redirect to=\"/signup\"/>\n}\n\n@inject('store')\n@observer\nclass App extends Component {\n  render() {\n\n    const { user } = this.props.store.userStore\n\n    return (\n      <Router>\n        <div className=\"App\">\n          { user && <NavBar/>}\n          <Switch>\n            <PrivateRoute user={user} path=\"/\" exact component={HomePage}/>\n            <PrivateRoute user={user} path=\"/contact/edit/:id?\" component={ContactEditPage} />\n            <PrivateRoute user={user} path=\"/contact/:id\" component={ContactDetailsPage}/>\n            <PrivateRoute user={user} path=\"/contact\" component={ContactPage} />\n            <PrivateRoute user={user} path=\"/stats\" component={Statistics}/>\n            <Route path=\"/signup\" component={SignupPage}/>\n            {/* render={this.getSignupCmp.bind(this)} */}\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n    store,\r\n    load\r\n}\r\n\r\nfunction store(key, any) {\r\n    localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction load(key) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n}\r\n","import StorageService from './StorageService'\r\nimport UtilService from './UtilService'\r\n\r\nexport default {\r\n    loadUser,\r\n    signup,\r\n    addMove\r\n}\r\n\r\nvar user;\r\n\r\nfunction loadUser() {\r\n    user = StorageService.load('user')\r\n    return user\r\n}\r\n\r\nfunction signup(name) {\r\n    user = {\r\n        name,\r\n        coins: 100, \r\n        moves: []\r\n    }\r\n    StorageService.store('user', user)\r\n    return user\r\n}\r\n\r\nfunction addMove(amount, contact) {\r\n    const { name } = contact\r\n    user.moves.unshift({\r\n        _id: UtilService.makeId(),\r\n        to: name,\r\n        at: Date.now(),\r\n        amount\r\n    })\r\n    _reduceCoins(amount)\r\n}\r\n\r\nfunction _reduceCoins(amount) {\r\n    user.coins -= amount\r\n    StorageService.store('user', user)\r\n}","import { observable, action, computed } from 'mobx'\r\nimport UserService from '../services/UserService'\r\n\r\nconst user = UserService.loadUser()\r\nexport default class UserStore {\r\n\r\n    @observable user = null\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        this.user = user\r\n    }\r\n\r\n    @computed\r\n    get coinsCount() {\r\n        return this.user.coins\r\n    }\r\n\r\n    @computed\r\n    get lastMoves() {\r\n        if (this.user.moves.length <= 3) return this.user.moves\r\n        else return this.user.moves.slice(0, 3)\r\n    }\r\n\r\n    @computed\r\n    get contactMoves() {\r\n        return this.user.moves.filter(move => move.to === this.rootStore.contactStore.currContact.name)\r\n        .map(move => ({_id: move._id, at: move.at, amount: move.amount}))\r\n    }\r\n\r\n    @action\r\n    loadUser() {\r\n        this.user = UserService.loadUser()\r\n    }\r\n\r\n    signUp(username) {\r\n        UserService.signup(username)\r\n        this.loadUser()\r\n    }\r\n\r\n    addMove(amount, contact) {\r\n        UserService.addMove(amount, contact)\r\n        this.loadUser()\r\n    }\r\n}","import { observable, action } from 'mobx'\r\nimport ContactService from '../services/ContactService'\r\n\r\nexport default class ContactStore {\r\n\r\n    @observable contacts = []\r\n    @observable currContact = ContactService.getEmptyContact()\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n    }\r\n\r\n    @action\r\n    async loadContacts(filter) {\r\n        this.contacts = await ContactService.getContacts(filter)\r\n    }\r\n\r\n    @action\r\n    async setContactById(id) {\r\n        this.currContact = await ContactService.getContactById(id)\r\n    }\r\n\r\n    saveContact(contact) {\r\n        ContactService.saveContact(contact)\r\n    }\r\n\r\n    deleteContact(id) {\r\n        ContactService.deleteContact(id)\r\n    }\r\n}","import { observable, action } from 'mobx'\r\nimport BitcoinService from '../services/BitcoinService'\r\n\r\nexport default class BitcoinStore {\r\n\r\n    @observable rate = 0\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n    }\r\n\r\n    @action\r\n    async loadRate(coins) {\r\n        this.rate = await BitcoinService.getRate(coins)\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RootStore from './store/RootStore';\nimport { Provider } from 'mobx-react';\n\nconst rootStore = new RootStore()\n\nReactDOM.render(\n    <Provider store={rootStore}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import UserStore from './UserStore'\r\nimport ContactStore from './ContactStore'\r\nimport BitcoinStore from './BitcoinStore'\r\n\r\nexport default class RootStore {\r\n\tconstructor() {\r\n\t\tthis.userStore = new UserStore(this)\r\n\t\tthis.contactStore = new ContactStore(this)\r\n\t\tthis.bitcoinStore = new BitcoinStore(this)\r\n\t}\r\n}\r\n"],"sourceRoot":""}